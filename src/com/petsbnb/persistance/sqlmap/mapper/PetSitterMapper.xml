<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="com.petsbnb.persistance.mapper.PetSitterMapper">
	<select id="getPetSitterInfo" parameterType="string" resultType="PetSitterDTO">
		SELECT PETSITTER_NO						AS petSitterNo,
			   USER_NO							AS userNo,
			   PETSITTER_NAME					AS petSitterName,
  			   PETSITTER_INTRODUCE_ONELINE		AS petSitterIntroduceOneLine,
  			   PETSITTERENV						AS petSitterEnv,
  			   PETSITTER_HAS_PET 				AS petSitterHasPet,
  			   LONGTERM_AVAILABLE 				AS longTermAvailable,
  			   WALK_AVAILABLE 					AS walkAvailable,
  			   BATH_AVAILABLE 					AS bathAvailable,
  			   FIRSTAID_AVAILABLE 				AS firstAidAvailable,
  			   MARKING_IMPOSSIBLE 				AS markingImpossible,
  			   BOWEL_IMPOSSIBLE 				AS bowelImpossible,
  			   ATTACK_IMPOSSIBLE  				AS attackImpossible,
  			   SEPARATION_IMPOSSIBLE 			AS separationImpossible,
  			   BITE_IMPOSSIBLE 					AS biteImpossible,
  			   SMALLPET_NIGHT_PRICE 			AS smallPetNightPrice,
  			   SMALLPET_DAY_PRICE 				AS smallPetDayPrice,
  			   MIDDLEPET_NIGHT_PRICE 			AS middlePetNightPrice,
  			   MIDDLEPET_DAY_PRICE 				AS middlePetDayPrice,
  			   BIGPET_NIGHT_PRICE 				AS bigPetNightPrice,
  			   BIGPET_DAY_PRICE 				AS bigPetDayPrice,
  			   REFUND_ACCOUNT_NAME 				AS refundAccountName,
  			   REFUND_BANK 						AS refundBank,
  			   REFUND_ACCOUNT_NUMBER 			AS refundAccountNumber,
  			   NECESSARY_ITEM 					AS necessaryItem,
  			   PETSITTER_INTRODUCE 				AS petSitterIntroduce,
  			   EXPOSURE							AS exposure,
  			   NIGHT_CHECKIN					AS nightCheckin,
  			   NIGHT_CHECKOUT					AS nightCheckout,
  			   REG_DT 							AS regDt,
  			   REG_NO  							AS regNo,
  			   CHG_DT  							AS chgDt,
  			   CHG_NO  							AS chgNo
  		  FROM PETSITTER_INFO
  		 WHERE USER_NO = #{userNo}
	</select>
	
	<insert id="insertPetSitterInfo" parameterType="PetSitterDTO">
		INSERT INTO PETSITTER_INFO
		(
			USER_NO,
			PETSITTER_NAME,
			PETSITTER_INTRODUCE_ONELINE,
			PETSITTERENV,
			PETSITTER_HAS_PET,
			LONGTERM_AVAILABLE,
			WALK_AVAILABLE,
			BATH_AVAILABLE,
			FIRSTAID_AVAILABLE,
			HAIRCARE_AVAILABLE,
			MARKING_IMPOSSIBLE,
			BOWEL_IMPOSSIBLE,
			ATTACK_IMPOSSIBLE,
			SEPARATION_IMPOSSIBLE,
			BITE_IMPOSSIBLE,
			SMALLPET_NIGHT_PRICE,
			SMALLPET_DAY_PRICE,
			MIDDLEPET_NIGHT_PRICE,
			MIDDLEPET_DAY_PRICE,
			BIGPET_NIGHT_PRICE,
			BIGPET_DAY_PRICE,
			REFUND_ACCOUNT_NAME,
			REFUND_BANK,
			REFUND_ACCOUNT_NUMBER,
			NECESSARY_ITEM,
			PETSITTER_INTRODUCE,
			REG_DT,
			REG_NO
		)
		VALUES
		(
			#{userNo} ,
			#{petSitterName} ,
			#{petSitterIntroduceOneLine} ,
			#{petSitterEnv} ,
			#{petSitterHasPet} ,
			#{longTermAvailable} ,
			#{walkAvailable} ,
			#{bathAvailable} ,
			#{firstaidAvailable} ,
			#{haircareAvailable} ,
			#{markingImpossible} ,
			#{bowelImpossible} ,
			#{attackImpossible} ,
			#{separationImpossible} ,
			#{biteImpossible} ,
			#{smallPetNightPrice} ,
			#{smallPetDayPrice} ,
			#{middlePetNightPrice} ,
			#{middlePetDayPrice} ,
			#{bigPetNightPrice} ,
			#{bigPetDayPrice} ,
			#{refundAccountName} ,
			#{refundBank} ,
			#{refundAccountNumber} ,
			#{necessaryItem} ,
			#{petSitterIntroduce} ,
			NOW(),
			#{userNo}
		)
		<selectKey resultType="string" keyProperty="petSitterNo" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>
	
	<insert id="insertPetSitterImageFile" parameterType="java.util.Map">
	INSERT INTO PETSITTER_FILE_INFO
	(
		
		PETSITTER_NO,
		USER_NO,
		PETSITTER_FILE_ORG_NAME,
		PETSITTER_FILE_NAME,
		PETSITTER_FILE_PATH,
		REG_NO,
		REG_DT
	)
	VALUES
		<foreach collection="petSitterImages" item="item" index="index" separator=",">
			(
				
				#{item.petSitterNo},
				#{item.userNo},
				#{item.petSitterFileOrgName},
				#{item.petSitterFileName},
				#{item.petSitterFilePath},
				#{item.regNo},
				NOW()
			)
		</foreach>
	</insert>
	<select id="getPetSitterInfoByPetSitterNo" parameterType="string" resultType="PetSitterDTO">
		SELECT PETSITTER_NO						AS petSitterNo,
			   USER_NO							AS userNo,
			   PETSITTER_NAME					AS petSitterName,
  			   PETSITTER_INTRODUCE_ONELINE		AS petSitterIntroduceOneLine,
  			   PETSITTERENV						AS petSitterEnv,
  			   PETSITTER_HAS_PET 				AS petSitterHasPet,
  			   LONGTERM_AVAILABLE 				AS longTermAvailable,
  			   WALK_AVAILABLE 					AS walkAvailable,
  			   BATH_AVAILABLE 					AS bathAvailable,
  			   FIRSTAID_AVAILABLE 				AS firstAidAvailable,
  			   HAIRCARE_AVAILABLE				AS haircareAvailable,
  			   MARKING_IMPOSSIBLE 				AS markingImpossible,
  			   BOWEL_IMPOSSIBLE 				AS bowelImpossible,
  			   ATTACK_IMPOSSIBLE  				AS attackImpossible,
  			   SEPARATION_IMPOSSIBLE 			AS separationImpossible,
  			   BITE_IMPOSSIBLE 					AS biteImpossible,
  			   SMALLPET_NIGHT_PRICE 			AS smallPetNightPrice,
  			   SMALLPET_DAY_PRICE 				AS smallPetDayPrice,
  			   MIDDLEPET_NIGHT_PRICE 			AS middlePetNightPrice,
  			   MIDDLEPET_DAY_PRICE 				AS middlePetDayPrice,
  			   BIGPET_NIGHT_PRICE 				AS bigPetNightPrice,
  			   BIGPET_DAY_PRICE 				AS bigPetDayPrice,
  			   REFUND_ACCOUNT_NAME 				AS refundAccountName,
  			   REFUND_BANK 						AS refundBank,
  			   REFUND_ACCOUNT_NUMBER 			AS refundAccountNumber,
  			   NECESSARY_ITEM 					AS necessaryItem,
  			   PETSITTER_INTRODUCE 				AS petSitterIntroduce,
  			   EXPOSURE							AS exposure,
  			   REG_DT 							AS regDt,
  			   REG_NO  							AS regNo,
  			   CHG_DT  							AS chgDt,
  			   CHG_NO  							AS chgNo
  		  FROM PETSITTER_INFO
  		 WHERE PETSITTER_NO = #{petSitterNo}
	</select>
	<select id="getPetSitterImage" parameterType="string" resultType="PetSitterFileDTO">
		SELECT PETSITTER_FILE_NO		AS petSitterFileNo,
			   PETSITTER_NO				AS petSitterNo,
			   USER_NO					AS userNo,
			   PETSITTER_FILE_ORG_NAME	AS petSitterFileOrgName,
			   PETSITTER_FILE_NAME		AS petSitterFileName,
			   PETSITTER_FILE_PATH		AS petSitterFilePath
		  FROM PETSITTER_FILE_INFO
		 WHERE PETSITTER_NO = #{petSitterNo}
	</select>
	
	<insert id="insertPetSitterImage" parameterType="PetSitterFileDTO">
		INSERT INTO PETSITTER_FILE_INFO
		(
			
			PETSITTER_NO,
			USER_NO,
			PETSITTER_FILE_ORG_NAME,
			PETSITTER_FILE_NAME,
			PETSITTER_FILE_PATH,
			REG_NO,
			REG_DT
		)
		VALUES
		(
				
			#{petSitterNo},
			#{userNo},
			#{petSitterFileOrgName},
			#{petSitterFileName},
			#{petSitterFilePath},
			#{regNo},
			NOW()
		)
	</insert>
	<delete id="deletePetSitterImage" parameterType="string">
		DELETE FROM PETSITTER_FILE_INFO WHERE PETSITTER_FILE_NO = #{petSitterFileNo}
	</delete>
	
	<update id="updatePetSitterInfo" parameterType="PetSitterDTO">
		UPDATE PETSITTER_INFO
		   SET PETSITTER_NAME = #{petSitterName},
			   PETSITTER_INTRODUCE_ONELINE = #{petSitterIntroduceOneLine},
			   PETSITTERENV = #{petSitterEnv},
			   PETSITTER_HAS_PET = #{petSitterHasPet},
			   LONGTERM_AVAILABLE = #{longTermAvailable},
			   WALK_AVAILABLE = #{walkAvailable},
			   BATH_AVAILABLE = #{bathAvailable},
			   FIRSTAID_AVAILABLE = #{firstaidAvailable},
			   HAIRCARE_AVAILABLE = #{haircareAvailable},
			   MARKING_IMPOSSIBLE = #{markingImpossible},
			   BOWEL_IMPOSSIBLE = #{bowelImpossible},
			   ATTACK_IMPOSSIBLE = #{attackImpossible},
			   SEPARATION_IMPOSSIBLE = #{separationImpossible},
			   BITE_IMPOSSIBLE = #{biteImpossible},
			   SMALLPET_NIGHT_PRICE = #{smallPetNightPrice},
			   SMALLPET_DAY_PRICE = #{smallPetDayPrice},
			   MIDDLEPET_NIGHT_PRICE = #{middlePetNightPrice},
			   MIDDLEPET_DAY_PRICE = #{middlePetDayPrice},
			   BIGPET_NIGHT_PRICE = #{bigPetNightPrice},
			   BIGPET_DAY_PRICE = #{bigPetDayPrice},
			   REFUND_ACCOUNT_NAME = #{refundAccountName},
			   REFUND_BANK = #{refundBank},
			   REFUND_ACCOUNT_NUMBER = #{refundAccountNumber},
			   NECESSARY_ITEM = #{necessaryItem},
			   PETSITTER_INTRODUCE = #{petSitterIntroduce},
			   CHG_DT = NOW(),
			   CHG_NO = #{userNo}
		 WHERE PETSITTER_NO = #{petSitterNo}
	</update>
	<update id="updateTogglePetSitterReservationExposure" parameterType="PetSitterDTO">
		UPDATE PETSITTER_INFO
		   SET EXPOSURE = #{exposure}
		 WHERE USER_NO = #{userNo} AND PETSITTER_NO =#{petSitterNo}
	</update>
	<update id="updateStartReservationExposure" parameterType="PetSitterDTO">
		UPDATE PETSITTER_INFO
		   SET EXPOSURE = 'true',
		       NIGHT_CHECKIN = #{nightCheckin},
		       NIGHT_CHECKOUT = #{nightCheckout}
		 WHERE USER_NO = #{userNo} AND PETSITTER_NO = #{petSitterNo}
	</update>
	<update id="updateStopReservationExposure" parameterType="PetSitterDTO">
		UPDATE PETSITTER_INFO
		   SET EXPOSURE = 'false',
		   	   NIGHT_CHECKIN = NULL,
		       NIGHT_CHECKOUT = NULL
		 WHERE USER_NO = #{userNo} AND PETSITTER_NO = #{petSitterNo}
	</update>
	<select id="getPDTO" parameterType="string" resultType="PetSitterDTO">
		SELECT P.PETSITTER_NO						AS petSitterNo,
			   P.USER_NO							AS userNo,
			   P.PETSITTER_NAME						AS petSitterName,
  			   P.PETSITTER_INTRODUCE_ONELINE		AS petSitterIntroduceOneLine,
  			   P.PETSITTERENV						AS petSitterEnv,
  			   P.PETSITTER_HAS_PET 					AS petSitterHasPet,
  			   P.LONGTERM_AVAILABLE 				AS longTermAvailable,
  			   P.WALK_AVAILABLE 					AS walkAvailable,
  			   P.BATH_AVAILABLE 					AS bathAvailable,
  			   P.FIRSTAID_AVAILABLE 				AS firstAidAvailable,
  			   P.MARKING_IMPOSSIBLE 				AS markingImpossible,
  			   P.BOWEL_IMPOSSIBLE 					AS bowelImpossible,
  			   P.ATTACK_IMPOSSIBLE  				AS attackImpossible,
  			   P.SEPARATION_IMPOSSIBLE 				AS separationImpossible,
  			   P.BITE_IMPOSSIBLE 					AS biteImpossible,
  			   P.SMALLPET_NIGHT_PRICE 				AS smallPetNightPrice,
  			   P.SMALLPET_DAY_PRICE 				AS smallPetDayPrice,
  			   P.MIDDLEPET_NIGHT_PRICE 				AS middlePetNightPrice,
  			   P.MIDDLEPET_DAY_PRICE 				AS middlePetDayPrice,
  			   P.BIGPET_NIGHT_PRICE 				AS bigPetNightPrice,
  			   P.BIGPET_DAY_PRICE 					AS bigPetDayPrice,
  			   P.REFUND_ACCOUNT_NAME 				AS refundAccountName,
  			   P.REFUND_BANK 						AS refundBank,
  			   P.REFUND_ACCOUNT_NUMBER 				AS refundAccountNumber,
  			   P.NECESSARY_ITEM 					AS necessaryItem,
  			   P.PETSITTER_INTRODUCE 				AS petSitterIntroduce,
  			   P.EXPOSURE							AS exposure,
  			   P.NIGHT_CHECKIN						AS nightCheckin,
  			   P.NIGHT_CHECKOUT						AS nightCheckout,
  			   F.PETSITTER_FILE_NAME				AS petSitterFileName,
  			   P.REG_DT 							AS regDt,
  			   P.REG_NO  							AS regNo,
  			   P.CHG_DT  							AS chgDt,
  			   P.CHG_NO  							AS chgNo
  		  FROM PETSITTER_INFO P
  		  LEFT OUTER JOIN (
			SELECT PETSITTER_NO,
                   PETSITTER_FILE_NAME
			  FROM PETSITTER_FILE_INFO
			 WHERE PETSITTER_NO = #{petSitterNo}
			 ORDER BY REG_DT
             LIMIT 1
          ) F
  		    ON P.PETSITTER_NO = F.PETSITTER_NO
  		 WHERE P.PETSITTER_NO = #{petSitterNo}
	</select>
	
	<select id="getPetSitterReservationList" parameterType="string" resultType="java.util.HashMap">
		SELECT PFI.PET_FILE_NAME					AS petFileName,
			   RI.RESERVATION_NAME					AS reservationName,
		       UI.USER_NAME							AS userName,
		       RI.STDATE							AS stDate,
		       (
					CASE RI.STATUS 
						WHEN "1" THEN "승인 대기" 
				        WHEN "2" THEN "승인 완료"
				        WHEN "3" THEN "예약 반려"
				        WHEN "4" THEN "예약 취소"
				        WHEN "5" THEN "펫시팅 진행"
					ELSE "펫시팅 완료" 
					END
				)									AS status,
				RI.RESERVATION_INFO_NO				AS id
		  FROM RESERVATION_INFO RI
		 INNER JOIN RESERVATION_PET_INFO RPI
		    ON RI.RESERVATION_INFO_NO = RPI.RESERVATION_INFO_NO
		 INNER JOIN PET_FILE_INFO PFI
		    ON RPI.PET_NO = PFI.PET_NO
		 INNER JOIN USER_INFO UI
		    ON PFI.USER_NO = UI.USER_NO
		 WHERE RI.SERVICE_PROVIDER = #{userNo}
		 GROUP BY RI.RESERVATION_INFO_NO
		 ORDER BY RI.REG_DT DESC
	</select>
	<select id="getPetSitterReservationDetail" parameterType="string" resultType="java.util.HashMap">
		SELECT RI.RESERVATION_INFO_NO									AS reservationInfoNo,
			   RI.IMP_UID												AS imp_uid,
		       RI.RESERVATION_NAME										AS reservationName,
		       RI.AMOUNT												AS amount,
		       RI.CHECKIN												AS checkin,	
		       RI.CHECKOUT												AS checkout,
		       RI.STDATE												AS stDate,
		       RI.EDDATE												AS edDate,
		       (
					CASE RI.STATUS 
						WHEN "1" THEN "승인 대기" 
				        WHEN "2" THEN "승인 완료"
				        WHEN "3" THEN "예약 반려"
				        WHEN "4" THEN "예약 취소"
				        WHEN "5" THEN "펫시팅 진행"
					ELSE "펫시팅 완료" 
					END
				)														AS status,
		       UI.USER_NAME												AS userName,
		       UI.USER_PHONE											AS userPhone,
		       CONCAT(UI.USER_ADDRESS, " ", UI.USER_ADDRESS_DETAIL)		AS userAddress
		  FROM RESERVATION_INFO RI
		 INNER JOIN USER_INFO UI
		    ON RI.SERVICE_RECEIVER = UI.USER_NO
		 WHERE RESERVATION_INFO_NO = #{reservationNo}
	</select>
	<select id="getPetSitterReservationPetDetail" parameterType="string" resultType="java.util.HashMap">
		SELECT RPI.RESERVATION_INFO_NO								AS reservationInfoNo,
		       RPI.RESERVATION_PET_INFO_NO							AS reservationPetInfoNo,
		       PI.PET_NAME											AS petName,
		       PI.PET_GENDER										AS petGender,
		       TIMESTAMPDIFF(YEAR, PI.PET_BIRTHDAY, CURDATE()) + 1	AS petAge,
		       PI.PET_WEIGHT										AS petWeight,
		       PI.PET_KIND											AS petKind,
		       PFI.PET_FILE_NAME									AS petFileName,
		       RPI.PET_NO											AS petNo
		  FROM RESERVATION_PET_INFO RPI
		 INNER JOIN PET_INFO PI
		    ON RPI.PET_NO = PI.PET_NO
		 INNER JOIN PET_FILE_INFO PFI
		    ON RPI.PET_NO = PFI.PET_NO
		 WHERE RPI.RESERVATION_INFO_NO = #{reservationNo}
		 GROUP BY RPI.RESERVATION_PET_INFO_NO
	</select>
	<update id="updateRejectReservation" parameterType="string">
		UPDATE RESERVATION_INFO
		   SET STATUS = 3
		 WHERE RESERVATION_INFO_NO = #{reservationNo}
	</update>
	<update id="updateApprovalReservation" parameterType="string">
		UPDATE RESERVATION_INFO
		   SET STATUS = 2
		 WHERE RESERVATION_INFO_NO = #{reservationNo}
	</update>
	<update id="updateProgressReservation" parameterType="string">
		UPDATE RESERVATION_INFO
		   SET STATUS = 5
		 WHERE RESERVATION_INFO_NO = #{reservationNo}
	</update>
	<update id="updateCompleteReservation" parameterType="string">
		UPDATE RESERVATION_INFO
		   SET STATUS = 6
		 WHERE RESERVATION_INFO_NO = #{reservationNo}
	</update>
</mapper>